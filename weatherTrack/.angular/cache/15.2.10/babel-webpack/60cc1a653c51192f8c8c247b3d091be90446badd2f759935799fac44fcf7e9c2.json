{"ast":null,"code":"import { ServiceService } from 'src/app/service.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service.service\";\nimport * as i3 from \"@angular/common\";\nfunction TrackComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\nfunction TrackComponent_ng_template_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate2(\" Weather is \", ctx_r2.weatherData, \" degree Celcius in \", ctx_r2.cityName, \"\");\n  }\n}\nfunction TrackComponent_ng_template_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" Please enter valid City Name\");\n  }\n}\nexport class TrackComponent {\n  constructor(formBuilder, service) {\n    this.formBuilder = formBuilder;\n    this.service = service;\n    this.myForm = this.formBuilder.group({\n      emailid: '',\n      city: ''\n    });\n  }\n  ngOnInit() {\n    //  this.SendTemp();\n  }\n  onSubmit() {\n    const formData = this.myForm.value;\n    this.cityName = formData.city;\n    console.log('Form submitted:', formData);\n    console.log(this.cityName);\n    this.SendTemp(this.cityName);\n    debugger;\n    this.GetCityData(this.cityName);\n    this.myForm.reset();\n  }\n  SendTemp(cityName) {\n    this.service.getJsonData(cityName).subscribe(data => {\n      this.weatherData = Math.round(data.main.temp - 273.15);\n    });\n  }\n  GetCityData(cityName) {\n    this.service.getCityData(cityName).subscribe(data => {\n      console.log(data);\n      this.longitute = data.lon;\n      this.latitude = data.lat;\n      console.log(this.longitute);\n      console.log(this.latitude);\n    });\n  }\n  static #_ = this.ɵfac = function TrackComponent_Factory(t) {\n    return new (t || TrackComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ServiceService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TrackComponent,\n    selectors: [[\"app-track\"]],\n    inputs: {\n      fromParent: \"fromParent\"\n    },\n    features: [i0.ɵɵProvidersFeature([ServiceService])],\n    decls: 31,\n    vars: 6,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"emailid\"], [\"type\", \"text\", \"id\", \"emailid\", \"formControlName\", \"emailid\", \"placeholder\", \"Enter your email ID\"], [\"for\", \"city\"], [\"type\", \"text\", \"id\", \"city\", \"formControlName\", \"city\", \"placeholder\", \"Enter your city you want to track\"], [\"type\", \"submit\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"Data\", \"\"], [\"noData\", \"\"]],\n    template: function TrackComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n        i0.ɵɵelementStart(4, \"title\");\n        i0.ɵɵtext(5, \"Weather Tracker\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"body\")(7, \"div\")(8, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function TrackComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(9, \"label\", 4);\n        i0.ɵɵtext(10, \"Email id: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 5)(12, \"br\")(13, \"br\");\n        i0.ɵɵelementStart(14, \"label\", 6);\n        i0.ɵɵtext(15, \"City: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 7)(17, \"br\")(18, \"br\");\n        i0.ɵɵelementStart(19, \"button\", 8);\n        i0.ɵɵtext(20, \"Submit\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\")(22, \"p\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(26, TrackComponent_div_26_Template, 1, 0, \"div\", 9);\n        i0.ɵɵtemplate(27, TrackComponent_ng_template_27_Template, 1, 2, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(29, TrackComponent_ng_template_29_Template, 1, 0, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(28);\n        const _r3 = i0.ɵɵreference(30);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        i0.ɵɵadvance(15);\n        i0.ɵɵtextInterpolate1(\"Email: \", ctx.myForm.controls[\"emailid\"].value, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"City: \", ctx.myForm.controls[\"city\"].value, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.cityName != null)(\"ngIfThen\", _r1)(\"ngIfElse\", _r3);\n      }\n    },\n    dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,cAAc,QAAQ,yBAAyB;;;;;;;ICuCpDC,sBAEM;;;;;IACcA,YAAmE;;;;IAAnEA,qGAAmE;;;;;IAEjEA,6CAA4B;;;ADpCtD,OAAM,MAAOC,cAAc;EAc3BC,YAAoBC,WAAwB,EAASC,OAAuB;IAAxD,gBAAW,GAAXD,WAAW;IAAsB,YAAO,GAAPC,OAAO;IAC1D,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACrCC,OAAO,EAAC,EAAE;MACVC,IAAI,EAAC;KAEJ,CAAC;EAKJ;EACEC,QAAQ;IAEP;EAAA;EAMHC,QAAQ;IACN,MAAMC,QAAQ,GAAG,IAAI,CAACN,MAAM,CAACO,KAAK;IAClC,IAAI,CAACC,QAAQ,GAACF,QAAQ,CAACH,IAAI;IAE3BM,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAACJ,QAAQ,CAAC;IACvCG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;IAG1B,IAAI,CAACG,QAAQ,CAAC,IAAI,CAACH,QAAQ,CAAC;IAE5B;IACA,IAAI,CAACI,WAAW,CAAC,IAAI,CAACJ,QAAQ,CAAC;IAI/B,IAAI,CAACR,MAAM,CAACa,KAAK,EAAE;EACrB;EAMAF,QAAQ,CAACH,QAAY;IACrB,IAAI,CAACT,OAAO,CAACe,WAAW,CAACN,QAAQ,CAAC,CAACO,SAAS,CAACC,IAAI,IAAE;MACnD,IAAI,CAACC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAACI,IAAI,CAACC,IAAI,GAAC,MAAM,CAAC;IACpD,CAAC,CAAC;EAEF;EAEAT,WAAW,CAACJ,QAAY;IACtB,IAAI,CAACT,OAAO,CAACuB,WAAW,CAACd,QAAQ,CAAC,CAACO,SAAS,CAACC,IAAI,IAAG;MACtDP,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;MACf,IAAI,CAACO,SAAS,GAAGP,IAAI,CAACQ,GAAG;MACzB,IAAI,CAACC,QAAQ,GAAGT,IAAI,CAACU,GAAG;MAExBjB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACa,SAAS,CAAC;MAC3Bd,OAAO,CAACC,GAAG,CAAC,IAAI,CAACe,QAAQ,CAAC;IAG1B,CAAC,CAAC;EACJ;EAAC;qBAzEY7B,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAA+B;IAAAC;MAAAC;IAAA;IAAAC,iCAFf,CAACpC,cAAc,CAAC;IAAAqC;IAAAC;IAAAC;IAAAC;MAAA;QCP5BvC,+BAAgB;QAEZA,0BAAsB;QAEtBA,6BAAO;QAAAA,+BAAe;QAAAA,iBAAQ;QAElCA,4BAAM;QAGyBA;UAAA,OAAYwC,cAAU;QAAA,EAAC;QAElDxC,gCAAqB;QAAAA,2BAAU;QAAAA,iBAAQ;QACvCA,4BAA4F;QAO5FA,iCAAmB;QAAAA,uBAAM;QAAAA,iBAAQ;QACjCA,4BAAoG;QAKpGA,kCAAuB;QAAAA,uBAAM;QAAAA,iBAAS;QAOtCA,4BAAK;QAEEA,aAAiD;QAAAA,iBAAI;QAExDA,0BAAG;QAAAA,aAA6C;QAAAA,iBAAI;QAIxDA,iEAEM;QACNA,mHAAqG;QAErGA,mHAAgE;QAIpEA,iBAAO;;;;;QAxCGA,eAAoB;QAApBA,sCAAoB;QAyBnBA,gBAAiD;QAAjDA,0EAAiD;QAEjDA,eAA6C;QAA7CA,sEAA6C;QAI9CA,eAA4B;QAA5BA,2CAA4B","names":["ServiceService","i0","TrackComponent","constructor","formBuilder","service","myForm","group","emailid","city","ngOnInit","onSubmit","formData","value","cityName","console","log","SendTemp","GetCityData","reset","getJsonData","subscribe","data","weatherData","Math","round","main","temp","getCityData","longitute","lon","latitude","lat","selectors","inputs","fromParent","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\shubh\\Documents\\ProjectsAngular\\WeatherTracker\\weatherTrack\\src\\app\\common\\track\\track.component.ts","C:\\Users\\shubh\\Documents\\ProjectsAngular\\WeatherTracker\\weatherTrack\\src\\app\\common\\track\\track.component.html"],"sourcesContent":["import { Component, OnInit,Input } from '@angular/core';\nimport { FormControl,FormBuilder, FormGroup } from '@angular/forms';\nimport { ServiceService } from 'src/app/service.service';\n\n@Component({\n  selector: 'app-track',\n  templateUrl: './track.component.html',\n  styleUrls: ['./track.component.css'],\n  providers:[ServiceService]\n})\nexport class TrackComponent implements OnInit {\n  @Input() fromParent!: string;\n\n\nmyForm:FormGroup;\nweatherData:any;\ncityName!: string;\nlongitute: any;\nlatitude: any;\n\n\n\n\n\nconstructor(private formBuilder: FormBuilder,private service :ServiceService){\n  this.myForm = this.formBuilder.group({\n  emailid:'',\n  city:'',\n\n  });\n\n  \n\n\n}\n  ngOnInit(): void {\n    \n   //  this.SendTemp();\n   \n     \n    \n  }\n\nonSubmit():void{\n  const formData = this.myForm.value;\n  this.cityName=formData.city;\n\n  console.log('Form submitted:',formData);\n  console.log(this.cityName);\n\n\n  this.SendTemp(this.cityName);\n\n  debugger;\n  this.GetCityData(this.cityName);\n \n  \n\n  this.myForm.reset();\n}\n\n\n\n\n\nSendTemp(cityName:any):void{\nthis.service.getJsonData(cityName).subscribe(data=>{\nthis.weatherData = Math.round(data.main.temp-273.15) ;\n})\n\n}\n\nGetCityData(cityName:any):void{\n  this.service.getCityData(cityName).subscribe(data =>{\nconsole.log(data);\n  this.longitute = data.lon;\n  this.latitude = data.lat;\n\n  console.log(this.longitute);\n  console.log(this.latitude);\n\n\n  })\n}\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Weather Tracker</title>\n</head>\n<body>\n<div>\n    \n    <form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n     \n    <label for=\"emailid\">Email id: </label>\n    <input type=\"text\" id=\"emailid\" formControlName=\"emailid\" placeholder=\"Enter your email ID\">\n    \n    \n    <br>\n\n    <br>\n\n    <label for=\"city\" >City: </label>\n    <input type=\"text\" id=\"city\" formControlName=\"city\" placeholder=\"Enter your city you want to track\">\n\n    <br>\n    \n    <br>\n    <button type=\"submit\" >Submit</button>\n\n    </form>\n\n\n    </div>\n\n    <div>\n\n        <p>Email: {{ this.myForm.controls['emailid'].value}}</p>\n\n        <p>City: {{ this.myForm.controls['city'].value}}</p>\n\n    </div> \n    \n    <div *ngIf = 'this.cityName!=null then Data else noData'>\n\n    </div>\n    <ng-template #Data> Weather is {{this.weatherData}} degree Celcius in {{this.cityName}}</ng-template>\n\n    <ng-template #noData> Please enter valid City Name</ng-template>\n\n\n    \n</body>\n</html>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}