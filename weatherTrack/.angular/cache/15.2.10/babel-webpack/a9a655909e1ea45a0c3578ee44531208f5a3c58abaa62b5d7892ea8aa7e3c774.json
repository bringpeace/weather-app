{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ServiceService {\n  constructor(http) {\n    this.http = http;\n    this.apiKey = 'fb6cf7edf63d72f6e8fd475fa7dd5fc0';\n    //cityName='mumbai';\n    // private dataUrl =`https://api.openweathermap.org/data/2.5/weather?q=${this.cityName}&appid=${this.apiKey}`;\n    this.dataUrl = `https://api.openweathermap.org/data/2.5/weather`;\n    this.airPollutionUrl = `http://api.openweathermap.org/data/2.5/air_pollution?lat={lat}&lon={lon}&appid={API key}`;\n    this.cityToLat = `http://api.openweathermap.org/geo/1.0/direct?q={city name},{state code},{country code}&limit={limit}&appid={API key}`;\n  }\n  ngOnInit() {}\n  getJsonData(cityName) {\n    const params = new HttpParams().set('q', cityName).set('apiKey', this.apiKey);\n    return this.http.get(this.dataUrl, {\n      params\n    });\n  }\n  getAirIndex(lat, lon) {\n    const params = new HttpParams().set('lat', this.lat).set('lon', this.lon).set('appid', this.apiKey);\n    return this.http.get(this.airPollutionUrl, {\n      params\n    }); //only takes params as argumaent no other name is considered.\n  }\n\n  getCityData(cityName) {\n    const params = new HttpParams().set('q', cityName).set('apiKey', this.apiKey);\n    return this.http.get(this.cityToLat, {\n      params\n    });\n  }\n  static #_ = this.ɵfac = function ServiceService_Factory(t) {\n    return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ServiceService,\n    factory: ServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAGA,SAASA,UAAU,QAAQ,sBAAsB;;;AAKjD,OAAM,MAAOC,cAAc;EAkBzBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAXxB,WAAM,GAAE,kCAAkC;IAE3C;IACA;IACQ,YAAO,GAAE,iDAAiD;IAE1D,oBAAe,GAAG,0FAA0F;IAE5G,cAAS,GAAG,sHAAsH;EAGnG;EAEtCC,QAAQ,IAAQ;EAGlBC,WAAW,CAACC,QAAa;IACvB,MAAMC,MAAM,GAAG,IAAIP,UAAU,EAAE,CAACQ,GAAG,CAAC,GAAG,EAACF,QAAQ,CAAC,CAACE,GAAG,CAAC,QAAQ,EAAC,IAAI,CAACC,MAAM,CAAC;IAE3E,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,IAAI,CAACC,OAAO,EAAC;MAACJ;IAAM,CAAC,CAAC;EAE3C;EAEFK,WAAW,CAACC,GAAQ,EAAEC,GAAO;IAC3B,MAAMP,MAAM,GAAG,IAAIP,UAAU,EAAE,CAACQ,GAAG,CAAC,KAAK,EAAC,IAAI,CAACK,GAAG,CAAC,CAACL,GAAG,CAAC,KAAK,EAAC,IAAI,CAACM,GAAG,CAAC,CAACN,GAAG,CAAC,OAAO,EAAC,IAAI,CAACC,MAAM,CAAC;IAChG,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,IAAI,CAACK,eAAe,EAAC;MAACR;IAAM,CAAC,CAAC,CAAC,CAAK;EAC3D;;EAEAS,WAAW,CAACV,QAAa;IACvB,MAAMC,MAAM,GAAG,IAAIP,UAAU,EAAE,CAACQ,GAAG,CAAC,GAAG,EAACF,QAAQ,CAAC,CAACE,GAAG,CAAC,QAAQ,EAAC,IAAI,CAACC,MAAM,CAAC;IAE3E,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,IAAI,CAACO,SAAS,EAAC;MAACV;IAAM,CAAC,CAAC;EAE7C;EAAC;qBAxCUN,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAiB,SAAdjB,cAAc;IAAAkB,YAFb;EAAM","names":["HttpParams","ServiceService","constructor","http","ngOnInit","getJsonData","cityName","params","set","apiKey","get","dataUrl","getAirIndex","lat","lon","airPollutionUrl","getCityData","cityToLat","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\shubh\\Documents\\ProjectsAngular\\WeatherTracker\\weatherTrack\\src\\app\\service.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService  implements OnInit{\n\n  WeatherData:any;\n  cityName:any\n  lat:any;\n  lon:any;\n\n  apiKey= 'fb6cf7edf63d72f6e8fd475fa7dd5fc0';\n  \n //cityName='mumbai';\n // private dataUrl =`https://api.openweathermap.org/data/2.5/weather?q=${this.cityName}&appid=${this.apiKey}`;\n private dataUrl =`https://api.openweathermap.org/data/2.5/weather`;\n\n private airPollutionUrl = `http://api.openweathermap.org/data/2.5/air_pollution?lat={lat}&lon={lon}&appid={API key}`\n\n private cityToLat = `http://api.openweathermap.org/geo/1.0/direct?q={city name},{state code},{country code}&limit={limit}&appid={API key}`;\n  \n\n  constructor(private http:HttpClient) {}\n\n  ngOnInit():void{} \n\n\ngetJsonData(cityName: any): Observable<any> {\n  const params = new HttpParams().set('q',cityName).set('apiKey',this.apiKey);\n\n  return this.http.get(this.dataUrl,{params});\n\n  }\n\ngetAirIndex(lat: any, lon:any): Observable<any>{\n  const params = new HttpParams().set('lat',this.lat).set('lon',this.lon).set('appid',this.apiKey);\n  return this.http.get(this.airPollutionUrl,{params});     //only takes params as argumaent no other name is considered.\n}\n\ngetCityData(cityName: any): Observable<any> {\n  const params = new HttpParams().set('q',cityName).set('apiKey',this.apiKey);\n\n  return this.http.get(this.cityToLat,{params});\n\n  }\n\n  \n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}