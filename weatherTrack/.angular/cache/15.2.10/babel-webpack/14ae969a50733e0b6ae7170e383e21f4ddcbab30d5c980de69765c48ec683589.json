{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service.service\";\nexport class TrackComponent {\n  constructor(formBuilder, service) {\n    this.formBuilder = formBuilder;\n    this.service = service;\n    this.myForm = this.formBuilder.group({\n      emailid: '',\n      city: ''\n    });\n  }\n  ngOnInit() {\n    this.service.ngOnInit();\n    console.log(this.service.WeatherData.temp);\n  }\n  onSubmit() {\n    const formData = this.myForm.value;\n    console.log('Form submitted:', formData);\n    this.myForm.reset();\n  }\n  static #_ = this.ɵfac = function TrackComponent_Factory(t) {\n    return new (t || TrackComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ServiceService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TrackComponent,\n    selectors: [[\"app-track\"]],\n    decls: 26,\n    vars: 3,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"emailid\"], [\"type\", \"text\", \"id\", \"emailid\", \"formControlName\", \"emailid\", \"placeholder\", \"Enter your email ID\"], [\"for\", \"city\"], [\"type\", \"text\", \"id\", \"city\", \"formControlName\", \"city\", \"placeholder\", \"Enter your city you want to track\"], [\"type\", \"submit\"]],\n    template: function TrackComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n        i0.ɵɵelementStart(4, \"title\");\n        i0.ɵɵtext(5, \"Weather Tracker\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"body\")(7, \"div\")(8, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function TrackComponent_Template_form_ngSubmit_8_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(9, \"label\", 4);\n        i0.ɵɵtext(10, \"Email id: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 5)(12, \"br\")(13, \"br\");\n        i0.ɵɵelementStart(14, \"label\", 6);\n        i0.ɵɵtext(15, \"City: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 7)(17, \"br\")(18, \"br\");\n        i0.ɵɵelementStart(19, \"button\", 8);\n        i0.ɵɵtext(20, \"Submit\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\")(22, \"p\");\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        i0.ɵɵadvance(15);\n        i0.ɵɵtextInterpolate1(\"Email: \", ctx.myForm.emailid, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"City: \", ctx.myForm.city, \"\");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,cAAc;EAM3BC,YAAoBC,WAAwB,EAASC,OAAuB;IAAxD,gBAAW,GAAXD,WAAW;IAAsB,YAAO,GAAPC,OAAO;IAC1D,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACrCC,OAAO,EAAC,EAAE;MACVC,IAAI,EAAC;KAEJ,CAAC;EAKJ;EACEC,QAAQ;IAEL,IAAI,CAACL,OAAO,CAACK,QAAQ,EAAE;IACvBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,OAAO,CAACQ,WAAW,CAACC,IAAI,CAAC;EAC7C;EAEFC,QAAQ;IACN,MAAMC,QAAQ,GAAG,IAAI,CAACV,MAAM,CAACW,KAAK;IAClCN,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAACI,QAAQ,CAAC;IAEvC,IAAI,CAACV,MAAM,CAACY,KAAK,EAAE;EACrB;EAAC;qBA5BYhB,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAAiB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCR3BC,+BAAgB;QAEZA,0BAAsB;QAEtBA,6BAAO;QAAAA,+BAAe;QAAAA,iBAAQ;QAElCA,4BAAM;QAGyBA;UAAA,OAAYC,cAAU;QAAA,EAAC;QAElDD,gCAAqB;QAAAA,2BAAU;QAAAA,iBAAQ;QACvCA,4BAA4F;QAO5FA,iCAAkB;QAAAA,uBAAM;QAAAA,iBAAQ;QAChCA,4BAAoG;QAKpGA,kCAAuB;QAAAA,uBAAM;QAAAA,iBAAS;QAOtCA,4BAAK;QACEA,aAA+B;QAAAA,iBAAI;QAC9CA,0BAAG;QAAAA,aAA2B;QAAAA,iBAAI;;;QAzBxBA,eAAoB;QAApBA,sCAAoB;QAwBnBA,gBAA+B;QAA/BA,wDAA+B;QACvCA,eAA2B;QAA3BA,oDAA2B","names":["TrackComponent","constructor","formBuilder","service","myForm","group","emailid","city","ngOnInit","console","log","WeatherData","temp","onSubmit","formData","value","reset","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\shubh\\Documents\\ProjectsAngular\\WeatherTracker\\weatherTrack\\src\\app\\common\\track\\track.component.ts","C:\\Users\\shubh\\Documents\\ProjectsAngular\\WeatherTracker\\weatherTrack\\src\\app\\common\\track\\track.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl,FormBuilder, FormGroup } from '@angular/forms';\nimport { ServiceService } from 'src/app/service.service';\n\n@Component({\n  selector: 'app-track',\n  templateUrl: './track.component.html',\n  styleUrls: ['./track.component.css']\n})\nexport class TrackComponent implements OnInit {\n\nmyForm:FormGroup;\nweatherData : any;\n\n\nconstructor(private formBuilder: FormBuilder,private service :ServiceService){\n  this.myForm = this.formBuilder.group({\n  emailid:'',\n  city:'',\n\n  });\n\n  \n\n\n}\n  ngOnInit(): void {\n   \n     this.service.ngOnInit();\n     console.log(this.service.WeatherData.temp);\n  }\n\nonSubmit():void{\n  const formData = this.myForm.value;\n  console.log('Form submitted:',formData);\n\n  this.myForm.reset();\n}\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Weather Tracker</title>\n</head>\n<body>\n<div>\n    \n    <form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n     \n    <label for=\"emailid\">Email id: </label>\n    <input type=\"text\" id=\"emailid\" formControlName=\"emailid\" placeholder=\"Enter your email ID\">\n    \n    \n    <br>\n\n    <br>\n\n    <label for=\"city\">City: </label>\n    <input type=\"text\" id=\"city\" formControlName=\"city\" placeholder=\"Enter your city you want to track\">\n\n    <br>\n    \n    <br>\n    <button type=\"submit\" >Submit</button>\n\n    </form>\n\n\n    </div>\n\n    <div>\n        <p>Email: {{ this.myForm.emailid}}</p>\n<p>City: {{ this.myForm.city}}</p>\n\n    </div>\n\n\n    \n</body>\n</html>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}